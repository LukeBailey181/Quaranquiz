{"ast":null,"code":"var _jsxFileName = \"/Users/luke/Documents/ProDocuments/projects/Quaranquiz/react-quiz-app/src/components/makeRound.js\";\nimport React, { component, useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Redirect } from 'react-router';\nimport { NameForm } from './helperUIcomponents.js';\nimport Button from 'react-bootstrap/Button';\nimport Table from 'react-bootstrap/Table';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport cellEditFactory from 'react-bootstrap-table2-editor';\nimport MaterialTable from 'material-table';\nexport function MaterialTableDemo() {\n  const [state, setState] = React.useState({\n    columns: [{\n      title: 'Name',\n      field: 'name'\n    }, {\n      title: 'Surname',\n      field: 'surname'\n    }, {\n      title: 'Birth Year',\n      field: 'birthYear',\n      type: 'numeric'\n    }, {\n      title: 'Birth Place',\n      field: 'birthCity',\n      lookup: {\n        34: 'İstanbul',\n        63: 'Şanlıurfa'\n      }\n    }],\n    data: [{\n      name: 'Mehmet',\n      surname: 'Baran',\n      birthYear: 1987,\n      birthCity: 63\n    }, {\n      name: 'Zerya Betül',\n      surname: 'Baran',\n      birthYear: 2017,\n      birthCity: 34\n    }]\n  });\n  return /*#__PURE__*/React.createElement(MaterialTable, {\n    title: \"Editable Example\",\n    columns: state.columns,\n    data: state.data,\n    options: {\n      search: false\n    },\n    editable: {\n      onRowAdd: newData => new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n          setState(prevState => {\n            const data = [...prevState.data];\n            data.push(newData);\n            return { ...prevState,\n              data\n            };\n          });\n        }, 600);\n      }),\n      onRowUpdate: (newData, oldData) => new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n\n          if (oldData) {\n            setState(prevState => {\n              const data = [...prevState.data];\n              data[data.indexOf(oldData)] = newData;\n              return { ...prevState,\n                data\n              };\n            });\n          }\n        }, 600);\n      }),\n      onRowDelete: oldData => new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n          setState(prevState => {\n            const data = [...prevState.data];\n            data.splice(data.indexOf(oldData), 1);\n            return { ...prevState,\n              data\n            };\n          });\n        }, 600);\n      })\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  });\n}\n\nfunction QuestionInput(props) {\n  const [questionNumber, setQuestionNumber] = useState(1);\n\n  const incrementQ = () => {\n    setQuestionNumber(questionNumber + 1);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, \"Qestion \", questionNumber), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(NameForm, {\n    fieldText: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }, \"Answer \", questionNumber), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(NameForm, {\n    fieldText: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: incrementQ,\n    type: \"button\",\n    class: \"btn btn-primary btn-lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }, \"Add Question\"));\n}\n\nexport default function MakeRound(props) {\n  const [numRows, setNumRows] = useState(1);\n  const [roundData, setRoundData] = useState([]);\n  const [firstRender, setFirstRender] = useState(true);\n  const [homeRedirect, setHomeRedirect] = useState(false);\n  const [quizOverviewRedirect, setQuizOverviewRedirect] = useState(false);\n  useEffect(() => {\n    if (props.edit) {//api call\n    } else {\n      setRoundData([{\n        id: numRows,\n        Question: 'Click to edit',\n        Answer: 'Click to edit'\n      }]);\n      console.log(\"use effecy triggered\");\n    }\n  }, []);\n  /*----------Buttons in talbe----------*/\n\n  const actionsFormatter = (cell, row) => {\n    const deleteRow = row_id => {\n      //setNumRows(numRows - 1)\n      console.log(row_id);\n      console.log(\"Round data\");\n      console.log(roundData);\n      console.log(\"Data\");\n      console.log(\"Splice of data\");\n      /*data = data.splice(row_id-1,1)\n      \n      for (var i =0; i<data.length; i ++) {\n         data[i].id = i+1\n      }\n      setRoundData(data) */\n    };\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"danger\",\n      onClick: () => deleteRow(row.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }\n    }, \"Delete\"));\n  };\n  /*----------Navigation Helpers Start----------*/\n\n\n  const toHome = () => {\n    setHomeRedirect(true);\n  };\n\n  const toQuizOverview = () => {\n    setQuizOverviewRedirect(true);\n  };\n\n  if (homeRedirect) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      push: true,\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 16\n      }\n    });\n  }\n\n  if (quizOverviewRedirect) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      push: true,\n      to: \"/quizOverview\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 16\n      }\n    });\n  }\n  /*----------Navigation Helpers End----------*/\n\n\n  const columns = [{\n    dataField: 'id',\n    text: 'Question Number'\n  }, {\n    dataField: 'Question',\n    text: 'Question'\n  }, {\n    dataField: 'Answer',\n    text: 'Answer'\n  }, {\n    dataField: 'Delete',\n    text: 'Delete',\n    isDummyField: true,\n    formatter: actionsFormatter,\n    editable: false\n  }];\n\n  const printProducts = () => {\n    console.log(roundData);\n  };\n\n  const newTableEntry = () => {\n    setRoundData([...roundData, {\n      id: numRows + 1,\n      Question: 'Click to edit',\n      Answer: 'Click to edit'\n    }]);\n    setNumRows(numRows + 1);\n  };\n\n  const submitRound = () => {\n    alert(\"Round Submitted! (not yet but soomn\");\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"full-screen-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"upper-left-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"central\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: toHome,\n    type: \"button\",\n    class: \"btn btn-primary btn-lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 21\n    }\n  }, \"Home\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"padded-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    size: \"lg\",\n    onClick: toQuizOverview,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 25\n    }\n  }, \"Overview\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"central\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(MaterialTableDemo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    size: \"lg\",\n    onClick: printProducts,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 13\n    }\n  }, \"Print Products\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"success\",\n    size: \"lg\",\n    onClick: newTableEntry,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 13\n    }\n  }, \"Add Question\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"success\",\n    size: \"lg\",\n    onClick: submitRound,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 13\n    }\n  }, \"Submit Round\")));\n}\n/*<BootstrapTable\nkeyField=\"id\"\ndata={ roundData }\ncolumns={ columns }\ncellEdit={ cellEditFactory({ \n    mode: 'click',\n    blurToSave:true \n}) }\n/>*/","map":{"version":3,"sources":["/Users/luke/Documents/ProDocuments/projects/Quaranquiz/react-quiz-app/src/components/makeRound.js"],"names":["React","component","useState","useEffect","Link","Redirect","NameForm","Button","Table","BootstrapTable","cellEditFactory","MaterialTable","MaterialTableDemo","state","setState","columns","title","field","type","lookup","data","name","surname","birthYear","birthCity","search","onRowAdd","newData","Promise","resolve","setTimeout","prevState","push","onRowUpdate","oldData","indexOf","onRowDelete","splice","QuestionInput","props","questionNumber","setQuestionNumber","incrementQ","MakeRound","numRows","setNumRows","roundData","setRoundData","firstRender","setFirstRender","homeRedirect","setHomeRedirect","quizOverviewRedirect","setQuizOverviewRedirect","edit","id","Question","Answer","console","log","actionsFormatter","cell","row","deleteRow","row_id","toHome","toQuizOverview","dataField","text","isDummyField","formatter","editable","printProducts","newTableEntry","submitRound","alert"],"mappings":"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","sourcesContent":["import React, { component, useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Redirect} from 'react-router';\nimport { NameForm } from './helperUIcomponents.js';\nimport Button from 'react-bootstrap/Button';\nimport Table from 'react-bootstrap/Table';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport cellEditFactory from 'react-bootstrap-table2-editor';\nimport MaterialTable from 'material-table';\n\nexport function MaterialTableDemo() {\n    const [state, setState] = React.useState({\n      columns: [\n        { title: 'Name', field: 'name' },\n        { title: 'Surname', field: 'surname' },\n        { title: 'Birth Year', field: 'birthYear', type: 'numeric' },\n        {\n          title: 'Birth Place',\n          field: 'birthCity',\n          lookup: { 34: 'İstanbul', 63: 'Şanlıurfa' },\n        },\n      ],\n      data: [\n        { name: 'Mehmet', surname: 'Baran', birthYear: 1987, birthCity: 63 },\n        {\n          name: 'Zerya Betül',\n          surname: 'Baran',\n          birthYear: 2017,\n          birthCity: 34,\n        },\n      ],\n    });\n  \n    return (\n      <MaterialTable\n        title=\"Editable Example\"\n        columns={state.columns}\n        data={state.data}\n        options = {{\n            search:false\n        }}\n        editable={{\n          onRowAdd: (newData) =>\n            new Promise((resolve) => {\n              setTimeout(() => {\n                resolve();\n                setState((prevState) => {\n                  const data = [...prevState.data];\n                  data.push(newData);\n                  return { ...prevState, data };\n                });\n              }, 600);\n            }),\n          onRowUpdate: (newData, oldData) =>\n            new Promise((resolve) => {\n              setTimeout(() => {\n                resolve();\n                if (oldData) {\n                  setState((prevState) => {\n                    const data = [...prevState.data];\n                    data[data.indexOf(oldData)] = newData;\n                    return { ...prevState, data };\n                  });\n                }\n              }, 600);\n            }),\n          onRowDelete: (oldData) =>\n            new Promise((resolve) => {\n              setTimeout(() => {\n                resolve();\n                setState((prevState) => {\n                  const data = [...prevState.data];\n                  data.splice(data.indexOf(oldData), 1);\n                  return { ...prevState, data };\n                });\n              }, 600);\n            }),\n        }}\n      />\n    );\n  }\n\nfunction QuestionInput(props) {\n\n    const [questionNumber, setQuestionNumber] = useState(1);\n\n    const incrementQ = () => {\n        setQuestionNumber(questionNumber + 1);\n    }\n\n    \n\n    return(\n        <div>                                                                                   \n            <h2>Qestion {questionNumber}</h2>\n            <div>\n                <NameForm fieldText = \"\"/>\n            </div>\n            <h2>Answer {questionNumber}</h2>\n            <div>\n                <NameForm fieldText = \"\"/>\n            </div>\n            <button onClick={incrementQ} type=\"button\" class=\"btn btn-primary btn-lg\">\n                Add Question\n            </button>\n        </div>\n    )\n}\n\nexport default function MakeRound(props) {\n\n    const [numRows, setNumRows] = useState(1);\n    const [roundData, setRoundData] = useState([]);\n    const [firstRender, setFirstRender] = useState(true);\n \n    const [homeRedirect, setHomeRedirect] = useState(false);\n    const [quizOverviewRedirect, setQuizOverviewRedirect] = useState(false);\n\n    useEffect( () => {\n        if(props.edit) {\n            //api call\n        } else {\n            setRoundData([{id: numRows, Question: 'Click to edit', Answer: 'Click to edit'}]);\n            console.log(\"use effecy triggered\")\n        }\n    },[])\n\n    /*----------Buttons in talbe----------*/\n\n\n    const actionsFormatter = (cell, row) => {\n\n        const deleteRow = (row_id) => {\n\n            //setNumRows(numRows - 1)\n    \n            console.log(row_id)\n            console.log(\"Round data\")\n            console.log(roundData)\n            console.log(\"Data\")\n            console.log(\"Splice of data\")\n             \n            /*data = data.splice(row_id-1,1)\n            \n            for (var i =0; i<data.length; i ++) {\n               data[i].id = i+1\n            }\n            setRoundData(data) */\n        }\n            \n        return(    \n            <div>\n                <Button variant=\"danger\" onClick={() => deleteRow(row.id)}>Delete</Button>\n            </div>\n        )\n    }\n    \n\n    /*----------Navigation Helpers Start----------*/\n    const toHome = () => {\n        setHomeRedirect(true);\n    }\n    const toQuizOverview = () => {\n        setQuizOverviewRedirect(true);\n    }\n\n    if (homeRedirect) {\n        return <Redirect push to=\"/\" />;\n    }\n    if (quizOverviewRedirect) {\n        return <Redirect push to=\"/quizOverview\" />;\n    }\n    /*----------Navigation Helpers End----------*/\n\n    const columns = [{\n        dataField: 'id',\n        text: 'Question Number'\n      }, {\n        dataField: 'Question',\n        text: 'Question'\n      }, {\n        dataField: 'Answer',\n        text: 'Answer'\n      }, {\n        dataField: 'Delete',\n        text: 'Delete',\n        isDummyField: true,\n        formatter: actionsFormatter,\n        editable: false\n      }];\n\n\n    const printProducts = () => {\n        console.log(roundData);\n    }\n\n    const newTableEntry = () => {\n        setRoundData([...roundData, {id: numRows + 1, Question: 'Click to edit', Answer: 'Click to edit'}]);\n        setNumRows(numRows + 1);        \n    }\n\n    const submitRound = () => {\n        alert(\"Round Submitted! (not yet but soomn\");\n    }\n\n    return(\n        <div className=\"full-screen-container\">  \n            <div className =\"upper-left-container\">\n                <div className=\"central\">\n                    <button onClick={toHome} type=\"button\" class=\"btn btn-primary btn-lg\">\n                        Home\n                    </button>\n                    <div className=\"padded-container\">\n                        <Button variant=\"primary\" size='lg' onClick={toQuizOverview}>Overview</Button>\n                    </div>\n                </div>\n            </div>\n            <div className=\"central\">\n            <MaterialTableDemo />\n            <Button variant=\"primary\" size='lg' onClick={printProducts}>Print Products</Button>\n            <Button variant=\"success\" size='lg' onClick={newTableEntry}>Add Question</Button>\n            <Button variant=\"success\" size='lg' onClick={submitRound}>Submit Round</Button>\n            </div>\n        </div>\n    );\n}\n\n\n/*<BootstrapTable\nkeyField=\"id\"\ndata={ roundData }\ncolumns={ columns }\ncellEdit={ cellEditFactory({ \n    mode: 'click',\n    blurToSave:true \n}) }\n/>*/ "]},"metadata":{},"sourceType":"module"}