{"ast":null,"code":"var _jsxFileName = \"/Users/luke/Documents/ProDocuments/projects/Quaranquiz/react-quiz-app/src/components/makeRound.js\";\nimport React, { component, useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Redirect } from 'react-router';\nimport { NameForm } from './helperUIcomponents.js';\nimport Button from 'react-bootstrap/Button';\nimport Table from 'react-bootstrap/Table';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport cellEditFactory from 'react-bootstrap-table2-editor';\nimport MaterialTable from 'material-table';\nexport function MaterialTableDemo(props) {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      padding: 50,\n      maxWidth: '100%',\n      backgroundColor: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(MaterialTable, {\n    title: \"Editable Example\",\n    columns: props.state.columns,\n    data: props.state.data,\n    options: {\n      search: false,\n      paging: false,\n      headerStyle: {\n        width: '80%',\n        backgroundColor: '#ddd',\n        height: 10,\n        textAlign: 'center'\n      }\n    },\n    editable: {\n      onRowAdd: newData => new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n          props.setState(prevState => {\n            const data = [...prevState.data];\n            data.push(newData);\n            return { ...prevState,\n              data\n            };\n          });\n        }, 0);\n      }),\n      onRowUpdate: (newData, oldData) => new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n\n          if (oldData) {\n            props.setState(prevState => {\n              const data = [...prevState.data];\n              data[data.indexOf(oldData)] = newData;\n              return { ...prevState,\n                data\n              };\n            });\n          }\n        }, 0);\n      }),\n      onRowDelete: oldData => new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n          props.setState(prevState => {\n            const data = [...prevState.data];\n            data.splice(data.indexOf(oldData), 1);\n            return { ...prevState,\n              data\n            };\n          });\n        }, 0);\n      })\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }\n  }));\n}\nexport default function MakeRound(props) {\n  const [numRows, setNumRows] = useState(1);\n  const [roundData, setRoundData] = useState([{\n    'qn': 1,\n    'question': \"First Question\",\n    'answer': \"first answer\"\n  }]);\n  const [columns, setColumns] = useState([{\n    title: 'Question Number',\n    field: 'qn'\n  }, {\n    title: 'Question',\n    field: 'question'\n  }, {\n    title: 'Answer',\n    field: 'answer'\n  }]);\n  const [state, setState] = useState({\n    columns: [//{ title: 'Quesition Number', field: 'tableData.id', type:'numeric', editable:false },\n    {\n      title: 'Question',\n      field: 'question'\n    }, {\n      title: 'Answer',\n      field: 'answer'\n    }],\n    data: [{\n      qn: \"1\",\n      question: 'Input Question',\n      answer: 'Input Answer'\n    }]\n  });\n  const [homeRedirect, setHomeRedirect] = useState(false);\n  const [quizOverviewRedirect, setQuizOverviewRedirect] = useState(false);\n  useEffect(() => {\n    if (props.edit) {//api call\n    } else {\n      setRoundData([{\n        id: numRows,\n        Question: 'Click to edit',\n        Answer: 'Click to edit'\n      }]);\n      console.log(\"use effecy triggered\");\n    }\n  }, []);\n  /*----------Navigation Helpers Start----------*/\n\n  const toHome = () => {\n    setHomeRedirect(true);\n  };\n\n  const toQuizOverview = () => {\n    setQuizOverviewRedirect(true);\n  };\n\n  if (homeRedirect) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      push: true,\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 16\n      }\n    });\n  }\n\n  if (quizOverviewRedirect) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      push: true,\n      to: \"/quizOverview\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 16\n      }\n    });\n  }\n\n  const printProducts = () => {\n    console.log(state.data);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"full-screen-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"upper-left-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"central\",\n    style: {\n      height: 400\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    size: \"lg\",\n    onClick: toHome,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 21\n    }\n  }, \"Home\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"padded-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    size: \"lg\",\n    onClick: toQuizOverview,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 25\n    }\n  }, \"Overview\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"central\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(MaterialTableDemo, {\n    state: state,\n    setState: setState,\n    numRows: numRows,\n    setNumRows: setNumRows,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    size: \"lg\",\n    onClick: printProducts,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }\n  }, \"Print Products\")));\n}","map":{"version":3,"sources":["/Users/luke/Documents/ProDocuments/projects/Quaranquiz/react-quiz-app/src/components/makeRound.js"],"names":["React","component","useState","useEffect","Link","Redirect","NameForm","Button","Table","BootstrapTable","cellEditFactory","MaterialTable","MaterialTableDemo","props","padding","maxWidth","backgroundColor","state","columns","data","search","paging","headerStyle","width","height","textAlign","onRowAdd","newData","Promise","resolve","setTimeout","setState","prevState","push","onRowUpdate","oldData","indexOf","onRowDelete","splice","MakeRound","numRows","setNumRows","roundData","setRoundData","setColumns","title","field","qn","question","answer","homeRedirect","setHomeRedirect","quizOverviewRedirect","setQuizOverviewRedirect","edit","id","Question","Answer","console","log","toHome","toQuizOverview","printProducts"],"mappings":"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","sourcesContent":["import React, { component, useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Redirect} from 'react-router';\nimport { NameForm } from './helperUIcomponents.js';\nimport Button from 'react-bootstrap/Button';\nimport Table from 'react-bootstrap/Table';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport cellEditFactory from 'react-bootstrap-table2-editor';\nimport MaterialTable from 'material-table';\n\nexport function MaterialTableDemo(props) {\n\n      \n    return (\n        <div style={{padding:50, maxWidth:'100%', backgroundColor:'red'}}>\n            \n            <MaterialTable\n                title=\"Editable Example\"\n                columns={props.state.columns}\n                data={props.state.data}\n                options = {{\n                    search:false,\n                    paging:false,\n                    headerStyle: {width: '80%', backgroundColor: '#ddd', height: 10, textAlign:'center'}\n                }}\n                editable={{\n                onRowAdd: (newData) =>\n                    new Promise((resolve) => {\n                    setTimeout(() => {\n                        resolve(); \n                        props.setState((prevState) => {\n                        const data = [...prevState.data];\n                        data.push(newData);\n                        return { ...prevState, data };\n                        });\n                    }, 0);\n                    }),\n                onRowUpdate: (newData, oldData) =>\n                    new Promise((resolve) => {\n                    setTimeout(() => {\n                        resolve();\n                        if (oldData) {\n                        props.setState((prevState) => {\n                            const data = [...prevState.data];\n                            data[data.indexOf(oldData)] = newData;\n                            return { ...prevState, data };\n                        });\n                        }\n                    }, 0);\n                    }),\n                onRowDelete: (oldData) =>\n                    new Promise((resolve) => {\n                    setTimeout(() => {\n                        resolve();\n                        props.setState((prevState) => {\n                        const data = [...prevState.data];\n                        data.splice(data.indexOf(oldData), 1);\n                        return { ...prevState, data };\n                        });\n                    }, 0);\n                    }),\n                }}\n            />\n        </div>\n    );\n  }\n\n\nexport default function MakeRound(props) {\n\n    const [numRows, setNumRows] = useState(1);\n    const [roundData, setRoundData] = useState([\n        { 'qn' : 1, 'question':\"First Question\", 'answer':\"first answer\"}\n    ]);\n    const [columns, setColumns] = useState([\n        { title: 'Question Number', field: 'qn' },\n        { title: 'Question', field: 'question' },\n        { title: 'Answer', field: 'answer'}\n      ])    \n\n     const [state, setState] = useState({ columns: [\n        //{ title: 'Quesition Number', field: 'tableData.id', type:'numeric', editable:false },\n        { title: 'Question', field: 'question' },\n        { title: 'Answer', field: 'answer' },\n      ],\n      data: [\n        {  qn: \"1\", question:'Input Question' , answer:'Input Answer' },\n      ],\n    });\n\n    const [homeRedirect, setHomeRedirect] = useState(false);\n    const [quizOverviewRedirect, setQuizOverviewRedirect] = useState(false);\n\n    useEffect( () => {\n        if(props.edit) {\n            //api call\n        } else {\n            setRoundData([{id: numRows, Question: 'Click to edit', Answer: 'Click to edit'}]);\n            console.log(\"use effecy triggered\")\n        }\n    },[])\n\n\n    /*----------Navigation Helpers Start----------*/\n    const toHome = () => {\n        setHomeRedirect(true);\n    }\n    const toQuizOverview = () => {\n        setQuizOverviewRedirect(true);\n    }\n\n    if (homeRedirect) {\n        return <Redirect push to=\"/\" />;\n    }\n    if (quizOverviewRedirect) {\n        return <Redirect push to=\"/quizOverview\" />;\n    }\n\n    const printProducts = () => {\n        console.log(state.data);\n    }\n\n    return(\n        <div className=\"full-screen-container\">  \n            <div className =\"upper-left-container\">\n                <div className=\"central\" style={{height:400}}>\n                    <Button variant=\"primary\" size=\"lg\" onClick={toHome}>\n                        Home\n                    </Button>\n                    <div className=\"padded-container\">\n                        <Button variant=\"primary\" size='lg' onClick={toQuizOverview}>Overview</Button>\n                    </div>\n                </div>\n            </div>\n            <div className=\"central\">\n            <MaterialTableDemo \n                state={state}\n                setState={setState}  \n                numRows={numRows}  \n                setNumRows={setNumRows}\n            />\n            <Button variant=\"primary\" size='lg' onClick={printProducts}>Print Products</Button>\n            </div>\n        </div>\n    );\n}\n\n"]},"metadata":{},"sourceType":"module"}