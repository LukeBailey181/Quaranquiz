{"ast":null,"code":"var _jsxFileName = \"/Users/luke/Documents/ProDocuments/projects/Quaranquiz/react-quiz-app/src/components/makeRound.js\";\nimport React, { component, useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Redirect } from 'react-router';\nimport { NameForm } from './helperUIcomponents.js';\nimport Button from 'react-bootstrap/Button';\nimport Table from 'react-bootstrap/Table';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport cellEditFactory from 'react-bootstrap-table2-editor';\n\nfunction QuestionInput(props) {\n  const [questionNumber, setQuestionNumber] = useState(1);\n\n  const incrementQ = () => {\n    setQuestionNumber(questionNumber + 1);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }, \"Qestion \", questionNumber), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(NameForm, {\n    fieldText: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, \"Answer \", questionNumber), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(NameForm, {\n    fieldText: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: incrementQ,\n    type: \"button\",\n    class: \"btn btn-primary btn-lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, \"Add Question\"));\n}\n\nexport default function MakeRound(props) {\n  const [numRows, setNumRows] = useState(1);\n  const [roundData, setRoundData] = useState([]);\n  const [firstRender, setFirstRender] = useState(true);\n  const [homeRedirect, setHomeRedirect] = useState(false);\n  const [quizOverviewRedirect, setQuizOverviewRedirect] = useState(false);\n  useEffect(() => {\n    if (props.edit) {//api call\n    } else {\n      setRoundData([{\n        id: numRows,\n        Question: 'Click to edit',\n        Answer: 'Click to edit'\n      }]);\n    }\n  }, []);\n  /*----------Buttons in talbe----------*/\n\n  const deleteRow = row_id => {\n    //setNumRows(numRows - 1)\n    var data = roundData;\n    console.log(data);\n    console.log(data.splice(row_id - 1, 1));\n    /*data = data.splice(row_id-1,1)\n    \n    for (var i =0; i<data.length; i ++) {\n       data[i].id = i+1\n    }\n    setRoundData(data) */\n  };\n\n  const actionsFormatter = (cell, row) => {\n    const row_id = row.id;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"danger\",\n      onClick: () => deleteRow(row_id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }\n    }, \"Delete\"));\n  };\n  /*----------Navigation Helpers Start----------*/\n\n\n  const toHome = () => {\n    setHomeRedirect(true);\n  };\n\n  const toQuizOverview = () => {\n    setQuizOverviewRedirect(true);\n  };\n\n  if (homeRedirect) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      push: true,\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 16\n      }\n    });\n  }\n\n  if (quizOverviewRedirect) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      push: true,\n      to: \"/quizOverview\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 16\n      }\n    });\n  }\n  /*----------Navigation Helpers End----------*/\n\n\n  const columns = [{\n    dataField: 'id',\n    text: 'Question Number'\n  }, {\n    dataField: 'Question',\n    text: 'Question'\n  }, {\n    dataField: 'Answer',\n    text: 'Answer'\n  }, {\n    dataField: 'Delete',\n    text: 'Delete',\n    isDummyField: true,\n    formatter: actionsFormatter,\n    editable: false\n  }];\n\n  const printProducts = () => {\n    console.log(roundData);\n  };\n\n  const newTableEntry = () => {\n    setRoundData([...roundData, {\n      id: numRows + 1,\n      Question: 'Click to edit',\n      Answer: 'Click to edit'\n    }]);\n    setNumRows(numRows + 1);\n  };\n\n  const submitRound = () => {\n    alert(\"Round Submitted! (not yet but soomn\");\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"full-screen-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"upper-left-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"central\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: toHome,\n    type: \"button\",\n    class: \"btn btn-primary btn-lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 21\n    }\n  }, \"Home\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"padded-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    size: \"lg\",\n    onClick: toQuizOverview,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 25\n    }\n  }, \"Overview\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"central\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(BootstrapTable, {\n    keyField: \"id\",\n    data: roundData,\n    columns: columns,\n    cellEdit: cellEditFactory({\n      mode: 'click',\n      blurToSave: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    size: \"lg\",\n    onClick: printProducts,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }\n  }, \"Print Products\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"success\",\n    size: \"lg\",\n    onClick: newTableEntry,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }\n  }, \"Add Question\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"success\",\n    size: \"lg\",\n    onClick: submitRound,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }\n  }, \"Submit Round\")));\n}","map":{"version":3,"sources":["/Users/luke/Documents/ProDocuments/projects/Quaranquiz/react-quiz-app/src/components/makeRound.js"],"names":["React","component","useState","useEffect","Link","Redirect","NameForm","Button","Table","BootstrapTable","cellEditFactory","QuestionInput","props","questionNumber","setQuestionNumber","incrementQ","MakeRound","numRows","setNumRows","roundData","setRoundData","firstRender","setFirstRender","homeRedirect","setHomeRedirect","quizOverviewRedirect","setQuizOverviewRedirect","edit","id","Question","Answer","deleteRow","row_id","data","console","log","splice","actionsFormatter","cell","row","toHome","toQuizOverview","columns","dataField","text","isDummyField","formatter","editable","printProducts","newTableEntry","submitRound","alert","mode","blurToSave"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,SAArC,QAAsD,OAAtD;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,QAAT,QAAwB,cAAxB;AACA,SAASC,QAAT,QAAyB,yBAAzB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,cAAP,MAA2B,4BAA3B;AACA,OAAOC,eAAP,MAA4B,+BAA5B;;AAGA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAE1B,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCZ,QAAQ,CAAC,CAAD,CAApD;;AAEA,QAAMa,UAAU,GAAG,MAAM;AACrBD,IAAAA,iBAAiB,CAACD,cAAc,GAAG,CAAlB,CAAjB;AACH,GAFD;;AAMA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAaA,cAAb,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,QAAD;AAAU,IAAA,SAAS,EAAG,EAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAFJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAYA,cAAZ,CALJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,QAAD;AAAU,IAAA,SAAS,EAAG,EAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CANJ,eASI;AAAQ,IAAA,OAAO,EAAEE,UAAjB;AAA6B,IAAA,IAAI,EAAC,QAAlC;AAA2C,IAAA,KAAK,EAAC,wBAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBATJ,CADJ;AAeH;;AAED,eAAe,SAASC,SAAT,CAAmBJ,KAAnB,EAA0B;AAErC,QAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBhB,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAM,CAACiB,SAAD,EAAYC,YAAZ,IAA4BlB,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACmB,WAAD,EAAcC,cAAd,IAAgCpB,QAAQ,CAAC,IAAD,CAA9C;AAEA,QAAM,CAACqB,YAAD,EAAeC,eAAf,IAAkCtB,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAM,CAACuB,oBAAD,EAAuBC,uBAAvB,IAAkDxB,QAAQ,CAAC,KAAD,CAAhE;AAEAC,EAAAA,SAAS,CAAE,MAAM;AACb,QAAGS,KAAK,CAACe,IAAT,EAAe,CACX;AACH,KAFD,MAEO;AACHP,MAAAA,YAAY,CAAC,CAAC;AAACQ,QAAAA,EAAE,EAAEX,OAAL;AAAcY,QAAAA,QAAQ,EAAE,eAAxB;AAAyCC,QAAAA,MAAM,EAAE;AAAjD,OAAD,CAAD,CAAZ;AACH;AACJ,GANQ,EAMP,EANO,CAAT;AAQA;;AACA,QAAMC,SAAS,GAAIC,MAAD,IAAY;AAE1B;AACA,QAAIC,IAAI,GAAGd,SAAX;AAEAe,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACG,MAAL,CAAYJ,MAAM,GAAC,CAAnB,EAAqB,CAArB,CAAZ;AAEA;;;;;;AAMH,GAdD;;AAgBA,QAAMK,gBAAgB,GAAG,CAACC,IAAD,EAAOC,GAAP,KAAe;AAEpC,UAAMP,MAAM,GAAGO,GAAG,CAACX,EAAnB;AAEA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,QAAhB;AAAyB,MAAA,OAAO,EAAE,MAAMG,SAAS,CAACC,MAAD,CAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,CADJ;AAKH,GATD;AAWA;;;AACA,QAAMQ,MAAM,GAAG,MAAM;AACjBhB,IAAAA,eAAe,CAAC,IAAD,CAAf;AACH,GAFD;;AAGA,QAAMiB,cAAc,GAAG,MAAM;AACzBf,IAAAA,uBAAuB,CAAC,IAAD,CAAvB;AACH,GAFD;;AAIA,MAAIH,YAAJ,EAAkB;AACd,wBAAO,oBAAC,QAAD;AAAU,MAAA,IAAI,MAAd;AAAe,MAAA,EAAE,EAAC,GAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH;;AACD,MAAIE,oBAAJ,EAA0B;AACtB,wBAAO,oBAAC,QAAD;AAAU,MAAA,IAAI,MAAd;AAAe,MAAA,EAAE,EAAC,eAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH;AACD;;;AAEA,QAAMiB,OAAO,GAAG,CAAC;AACbC,IAAAA,SAAS,EAAE,IADE;AAEbC,IAAAA,IAAI,EAAE;AAFO,GAAD,EAGX;AACDD,IAAAA,SAAS,EAAE,UADV;AAEDC,IAAAA,IAAI,EAAE;AAFL,GAHW,EAMX;AACDD,IAAAA,SAAS,EAAE,QADV;AAEDC,IAAAA,IAAI,EAAE;AAFL,GANW,EASX;AACDD,IAAAA,SAAS,EAAE,QADV;AAEDC,IAAAA,IAAI,EAAE,QAFL;AAGDC,IAAAA,YAAY,EAAE,IAHb;AAIDC,IAAAA,SAAS,EAAET,gBAJV;AAKDU,IAAAA,QAAQ,EAAE;AALT,GATW,CAAhB;;AAkBA,QAAMC,aAAa,GAAG,MAAM;AACxBd,IAAAA,OAAO,CAACC,GAAR,CAAYhB,SAAZ;AACH,GAFD;;AAIA,QAAM8B,aAAa,GAAG,MAAM;AACxB7B,IAAAA,YAAY,CAAC,CAAC,GAAGD,SAAJ,EAAe;AAACS,MAAAA,EAAE,EAAEX,OAAO,GAAG,CAAf;AAAkBY,MAAAA,QAAQ,EAAE,eAA5B;AAA6CC,MAAAA,MAAM,EAAE;AAArD,KAAf,CAAD,CAAZ;AACAZ,IAAAA,UAAU,CAACD,OAAO,GAAG,CAAX,CAAV;AACH,GAHD;;AAKA,QAAMiC,WAAW,GAAG,MAAM;AACtBC,IAAAA,KAAK,CAAC,qCAAD,CAAL;AACH,GAFD;;AAIA,sBACI;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAE,sBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAQ,IAAA,OAAO,EAAEX,MAAjB;AAAyB,IAAA,IAAI,EAAC,QAA9B;AAAuC,IAAA,KAAK,EAAC,wBAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,SAAhB;AAA0B,IAAA,IAAI,EAAC,IAA/B;AAAoC,IAAA,OAAO,EAAEC,cAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,CAJJ,CADJ,CADJ,eAWI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,cAAD;AACI,IAAA,QAAQ,EAAC,IADb;AAEI,IAAA,IAAI,EAAGtB,SAFX;AAGI,IAAA,OAAO,EAAGuB,OAHd;AAII,IAAA,QAAQ,EAAGhC,eAAe,CAAC;AACvB0C,MAAAA,IAAI,EAAE,OADiB;AAEvBC,MAAAA,UAAU,EAAC;AAFY,KAAD,CAJ9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,eAUA,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,SAAhB;AAA0B,IAAA,IAAI,EAAC,IAA/B;AAAoC,IAAA,OAAO,EAAEL,aAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAVA,eAWA,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,SAAhB;AAA0B,IAAA,IAAI,EAAC,IAA/B;AAAoC,IAAA,OAAO,EAAEC,aAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAXA,eAYA,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,SAAhB;AAA0B,IAAA,IAAI,EAAC,IAA/B;AAAoC,IAAA,OAAO,EAAEC,WAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAZA,CAXJ,CADJ;AA4BH","sourcesContent":["import React, { component, useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Redirect} from 'react-router';\nimport { NameForm } from './helperUIcomponents.js';\nimport Button from 'react-bootstrap/Button';\nimport Table from 'react-bootstrap/Table';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport cellEditFactory from 'react-bootstrap-table2-editor';\n\n\nfunction QuestionInput(props) {\n\n    const [questionNumber, setQuestionNumber] = useState(1);\n\n    const incrementQ = () => {\n        setQuestionNumber(questionNumber + 1);\n    }\n\n    \n\n    return(\n        <div>                                                                                   \n            <h2>Qestion {questionNumber}</h2>\n            <div>\n                <NameForm fieldText = \"\"/>\n            </div>\n            <h2>Answer {questionNumber}</h2>\n            <div>\n                <NameForm fieldText = \"\"/>\n            </div>\n            <button onClick={incrementQ} type=\"button\" class=\"btn btn-primary btn-lg\">\n                Add Question\n            </button>\n        </div>\n    )\n}\n\nexport default function MakeRound(props) {\n\n    const [numRows, setNumRows] = useState(1);\n    const [roundData, setRoundData] = useState([]);\n    const [firstRender, setFirstRender] = useState(true);\n \n    const [homeRedirect, setHomeRedirect] = useState(false);\n    const [quizOverviewRedirect, setQuizOverviewRedirect] = useState(false);\n\n    useEffect( () => {\n        if(props.edit) {\n            //api call\n        } else {\n            setRoundData([{id: numRows, Question: 'Click to edit', Answer: 'Click to edit'}]);\n        }\n    },[])\n\n    /*----------Buttons in talbe----------*/\n    const deleteRow = (row_id) => {\n\n        //setNumRows(numRows - 1)\n        var data = roundData;\n\n        console.log(data)\n        console.log(data.splice(row_id-1,1))\n        \n        /*data = data.splice(row_id-1,1)\n        \n        for (var i =0; i<data.length; i ++) {\n           data[i].id = i+1\n        }\n        setRoundData(data) */\n    }\n\n    const actionsFormatter = (cell, row) => {\n\n        const row_id = row.id\n\n        return(\n            <div>\n                <Button variant=\"danger\" onClick={() => deleteRow(row_id)}>Delete</Button>\n            </div>\n        )\n    }\n\n    /*----------Navigation Helpers Start----------*/\n    const toHome = () => {\n        setHomeRedirect(true);\n    }\n    const toQuizOverview = () => {\n        setQuizOverviewRedirect(true);\n    }\n\n    if (homeRedirect) {\n        return <Redirect push to=\"/\" />;\n    }\n    if (quizOverviewRedirect) {\n        return <Redirect push to=\"/quizOverview\" />;\n    }\n    /*----------Navigation Helpers End----------*/\n\n    const columns = [{\n        dataField: 'id',\n        text: 'Question Number'\n      }, {\n        dataField: 'Question',\n        text: 'Question'\n      }, {\n        dataField: 'Answer',\n        text: 'Answer'\n      }, {\n        dataField: 'Delete',\n        text: 'Delete',\n        isDummyField: true,\n        formatter: actionsFormatter,\n        editable: false\n      }];\n\n\n    const printProducts = () => {\n        console.log(roundData);\n    }\n\n    const newTableEntry = () => {\n        setRoundData([...roundData, {id: numRows + 1, Question: 'Click to edit', Answer: 'Click to edit'}]);\n        setNumRows(numRows + 1);        \n    }\n\n    const submitRound = () => {\n        alert(\"Round Submitted! (not yet but soomn\");\n    }\n\n    return(\n        <div className=\"full-screen-container\">  \n            <div className =\"upper-left-container\">\n                <div className=\"central\">\n                    <button onClick={toHome} type=\"button\" class=\"btn btn-primary btn-lg\">\n                        Home\n                    </button>\n                    <div className=\"padded-container\">\n                        <Button variant=\"primary\" size='lg' onClick={toQuizOverview}>Overview</Button>\n                    </div>\n                </div>\n            </div>\n            <div className=\"central\">\n            <BootstrapTable\n                keyField=\"id\"\n                data={ roundData }\n                columns={ columns }\n                cellEdit={ cellEditFactory({ \n                    mode: 'click',\n                    blurToSave:true \n                }) }\n            />\n            <Button variant=\"primary\" size='lg' onClick={printProducts}>Print Products</Button>\n            <Button variant=\"success\" size='lg' onClick={newTableEntry}>Add Question</Button>\n            <Button variant=\"success\" size='lg' onClick={submitRound}>Submit Round</Button>\n            </div>\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}