{"ast":null,"code":"var _jsxFileName = \"/Users/luke/Documents/ProDocuments/projects/Quaranquiz/react-quiz-app/src/components/makeRound.js\";\nimport React, { component, useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Switch, Route, Link, withRouter } from 'react-router-dom';\nimport { Redirect } from 'react-router';\nimport { NameForm } from './helperUIcomponents.js';\nimport Button from 'react-bootstrap/Button';\nimport Table from 'react-bootstrap/Table';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport cellEditFactory from 'react-bootstrap-table2-editor';\nimport MaterialTable from 'material-table';\nexport function CustomTable(props) {\n  const round = String(props.round);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      padding: 50,\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(MaterialTable, {\n    title: \"Round: \".concat(round),\n    columns: props.state.columns,\n    data: props.state.data,\n    options: {\n      search: false,\n      paging: false,\n      headerStyle: {\n        backgroundColor: '#ddd',\n        height: 10\n      },\n      filtering: false,\n      hideFilterIcons: true,\n      sorting: false\n    },\n    editable: {\n      onRowAdd: newData => new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n          props.setState(prevState => {\n            const data = [...prevState.data];\n            data.push(newData);\n            return { ...prevState,\n              data\n            };\n          });\n        }, 0);\n      }),\n      onRowUpdate: (newData, oldData) => new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n\n          if (oldData) {\n            props.setState(prevState => {\n              const data = [...prevState.data];\n              data[data.indexOf(oldData)] = newData;\n              return { ...prevState,\n                data\n              };\n            });\n          }\n        }, 0);\n      }),\n      onRowDelete: oldData => new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n          props.setState(prevState => {\n            const data = [...prevState.data];\n            data.splice(data.indexOf(oldData), 1);\n            return { ...prevState,\n              data\n            };\n          });\n        }, 0);\n      })\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }));\n}\nexport default function MakeRound(props) {\n  const [numRows, setNumRows] = useState(1);\n  const [round, setRound] = useState(1); //placeholder, this should be handed down from the quiz overview page\n\n  const [state, setState] = useState({\n    columns: [//{ title: 'Quesition Number', field: 'tableData.id', type:'numeric', editable:false },\n    {\n      title: 'Question',\n      field: 'question'\n    }, {\n      title: 'Answer',\n      field: 'answer'\n    }],\n    data: [{\n      qn: \"1\",\n      question: 'Input Question',\n      answer: 'Input Answer'\n    }]\n  });\n  const [homeRedirect, setHomeRedirect] = useState(false);\n  const [quizOverviewRedirect, setQuizOverviewRedirect] = useState(false);\n  /*----------Navigation Helpers Start----------*/\n\n  const toHome = () => {\n    setHomeRedirect(true);\n  };\n\n  const toQuizOverview = () => {\n    setQuizOverviewRedirect(true);\n  };\n\n  if (homeRedirect) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      push: true,\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 16\n      }\n    });\n  }\n\n  if (quizOverviewRedirect) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      push: true,\n      to: \"/quizOverview\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 16\n      }\n    });\n  }\n\n  const printProducts = () => {\n    console.log(state.data);\n  };\n\n  const printQuiz = () => {\n    console.log(props.quiz);\n  };\n\n  const printData = () => {\n    console.log(JSON.stringify(state.data));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"full-screen-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"upper-left-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"central\",\n    style: {\n      height: 400\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    size: \"lg\",\n    onClick: toHome,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 21\n    }\n  }, \"Home\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"padded-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    size: \"lg\",\n    onClick: toQuizOverview,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 25\n    }\n  }, \"Overview\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"central\",\n    style: {\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CustomTable, {\n    state: state,\n    setState: setState,\n    numRows: numRows,\n    setNumRows: setNumRows,\n    round: round,\n    quiz: props.quiz,\n    setQuiz: props.setQuiz,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    size: \"lg\",\n    onClick: printProducts,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 17\n    }\n  }, \"Print Products\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    size: \"lg\",\n    onClick: printQuiz,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 17\n    }\n  }, \"Print Quiz\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    size: \"lg\",\n    onClick: printData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 17\n    }\n  }, \"Print Quiz\")));\n}","map":{"version":3,"sources":["/Users/luke/Documents/ProDocuments/projects/Quaranquiz/react-quiz-app/src/components/makeRound.js"],"names":["React","component","useState","useEffect","BrowserRouter","Router","Switch","Route","Link","withRouter","Redirect","NameForm","Button","Table","BootstrapTable","cellEditFactory","MaterialTable","CustomTable","props","round","String","padding","width","concat","state","columns","data","search","paging","headerStyle","backgroundColor","height","filtering","hideFilterIcons","sorting","onRowAdd","newData","Promise","resolve","setTimeout","setState","prevState","push","onRowUpdate","oldData","indexOf","onRowDelete","splice","MakeRound","numRows","setNumRows","setRound","title","field","qn","question","answer","homeRedirect","setHomeRedirect","quizOverviewRedirect","setQuizOverviewRedirect","toHome","toQuizOverview","printProducts","console","log","printQuiz","quiz","printData","JSON","stringify","setQuiz"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,SAArC,QAAsD,OAAtD;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,MAAlC,EAA0CC,KAA1C,EAAiDC,IAAjD,EAAuDC,UAAvD,QAAyE,kBAAzE;AACA,SAASC,QAAT,QAAwB,cAAxB;AACA,SAASC,QAAT,QAAyB,yBAAzB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,cAAP,MAA2B,4BAA3B;AACA,OAAOC,eAAP,MAA4B,+BAA5B;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AAEA,OAAO,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAE/B,QAAMC,KAAK,GAAGC,MAAM,CAACF,KAAK,CAACC,KAAP,CAApB;AAEA,sBACI;AAAK,IAAA,KAAK,EAAE;AAACE,MAAAA,OAAO,EAAC,EAAT;AAAaC,MAAAA,KAAK,EAAC;AAAnB,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI,oBAAC,aAAD;AACI,IAAA,KAAK,EAAE,UAAUC,MAAV,CAAiBJ,KAAjB,CADX;AAEI,IAAA,OAAO,EAAED,KAAK,CAACM,KAAN,CAAYC,OAFzB;AAGI,IAAA,IAAI,EAAEP,KAAK,CAACM,KAAN,CAAYE,IAHtB;AAII,IAAA,OAAO,EAAI;AACPC,MAAAA,MAAM,EAAC,KADA;AAEPC,MAAAA,MAAM,EAAC,KAFA;AAGPC,MAAAA,WAAW,EAAE;AAACC,QAAAA,eAAe,EAAE,MAAlB;AAA0BC,QAAAA,MAAM,EAAE;AAAlC,OAHN;AAIPC,MAAAA,SAAS,EAAE,KAJJ;AAKPC,MAAAA,eAAe,EAAE,IALV;AAMPC,MAAAA,OAAO,EAAE;AANF,KAJf;AAYI,IAAA,QAAQ,EAAE;AACVC,MAAAA,QAAQ,EAAGC,OAAD,IACN,IAAIC,OAAJ,CAAaC,OAAD,IAAa;AACzBC,QAAAA,UAAU,CAAC,MAAM;AACbD,UAAAA,OAAO;AACPpB,UAAAA,KAAK,CAACsB,QAAN,CAAgBC,SAAD,IAAe;AAC9B,kBAAMf,IAAI,GAAG,CAAC,GAAGe,SAAS,CAACf,IAAd,CAAb;AACAA,YAAAA,IAAI,CAACgB,IAAL,CAAUN,OAAV;AACA,mBAAO,EAAE,GAAGK,SAAL;AAAgBf,cAAAA;AAAhB,aAAP;AACC,WAJD;AAKH,SAPS,EAOP,CAPO,CAAV;AAQC,OATD,CAFM;AAYViB,MAAAA,WAAW,EAAE,CAACP,OAAD,EAAUQ,OAAV,KACT,IAAIP,OAAJ,CAAaC,OAAD,IAAa;AACzBC,QAAAA,UAAU,CAAC,MAAM;AACbD,UAAAA,OAAO;;AACP,cAAIM,OAAJ,EAAa;AACb1B,YAAAA,KAAK,CAACsB,QAAN,CAAgBC,SAAD,IAAe;AAC1B,oBAAMf,IAAI,GAAG,CAAC,GAAGe,SAAS,CAACf,IAAd,CAAb;AACAA,cAAAA,IAAI,CAACA,IAAI,CAACmB,OAAL,CAAaD,OAAb,CAAD,CAAJ,GAA8BR,OAA9B;AACA,qBAAO,EAAE,GAAGK,SAAL;AAAgBf,gBAAAA;AAAhB,eAAP;AACH,aAJD;AAKC;AACJ,SATS,EASP,CATO,CAAV;AAUC,OAXD,CAbM;AAyBVoB,MAAAA,WAAW,EAAGF,OAAD,IACT,IAAIP,OAAJ,CAAaC,OAAD,IAAa;AACzBC,QAAAA,UAAU,CAAC,MAAM;AACbD,UAAAA,OAAO;AACPpB,UAAAA,KAAK,CAACsB,QAAN,CAAgBC,SAAD,IAAe;AAC9B,kBAAMf,IAAI,GAAG,CAAC,GAAGe,SAAS,CAACf,IAAd,CAAb;AACAA,YAAAA,IAAI,CAACqB,MAAL,CAAYrB,IAAI,CAACmB,OAAL,CAAaD,OAAb,CAAZ,EAAmC,CAAnC;AACA,mBAAO,EAAE,GAAGH,SAAL;AAAgBf,cAAAA;AAAhB,aAAP;AACC,WAJD;AAKH,SAPS,EAOP,CAPO,CAAV;AAQC,OATD;AA1BM,KAZd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ;AAuDD;AAGH,eAAe,SAASsB,SAAT,CAAmB9B,KAAnB,EAA0B;AAErC,QAAM,CAAC+B,OAAD,EAAUC,UAAV,IAAwBhD,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAM,CAACiB,KAAD,EAAQgC,QAAR,IAAoBjD,QAAQ,CAAC,CAAD,CAAlC,CAHqC,CAGC;;AACtC,QAAM,CAACsB,KAAD,EAAQgB,QAAR,IAAoBtC,QAAQ,CAAC;AAAEuB,IAAAA,OAAO,EAAE,CAC1C;AACA;AAAE2B,MAAAA,KAAK,EAAE,UAAT;AAAqBC,MAAAA,KAAK,EAAE;AAA5B,KAF0C,EAG1C;AAAED,MAAAA,KAAK,EAAE,QAAT;AAAmBC,MAAAA,KAAK,EAAE;AAA1B,KAH0C,CAAX;AAKjC3B,IAAAA,IAAI,EAAE,CACJ;AAAG4B,MAAAA,EAAE,EAAE,GAAP;AAAYC,MAAAA,QAAQ,EAAC,gBAArB;AAAwCC,MAAAA,MAAM,EAAC;AAA/C,KADI;AAL2B,GAAD,CAAlC;AAUA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCxD,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAM,CAACyD,oBAAD,EAAuBC,uBAAvB,IAAkD1D,QAAQ,CAAC,KAAD,CAAhE;AAGA;;AACA,QAAM2D,MAAM,GAAG,MAAM;AACjBH,IAAAA,eAAe,CAAC,IAAD,CAAf;AACH,GAFD;;AAGA,QAAMI,cAAc,GAAG,MAAM;AACzBF,IAAAA,uBAAuB,CAAC,IAAD,CAAvB;AACH,GAFD;;AAIA,MAAIH,YAAJ,EAAkB;AACd,wBAAO,oBAAC,QAAD;AAAU,MAAA,IAAI,MAAd;AAAe,MAAA,EAAE,EAAC,GAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH;;AACD,MAAIE,oBAAJ,EAA0B;AACtB,wBAAO,oBAAC,QAAD;AAAU,MAAA,IAAI,MAAd;AAAe,MAAA,EAAE,EAAC,eAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH;;AAED,QAAMI,aAAa,GAAG,MAAM;AACxBC,IAAAA,OAAO,CAACC,GAAR,CAAYzC,KAAK,CAACE,IAAlB;AACH,GAFD;;AAGA,QAAMwC,SAAS,GAAG,MAAM;AACpBF,IAAAA,OAAO,CAACC,GAAR,CAAY/C,KAAK,CAACiD,IAAlB;AACH,GAFD;;AAGA,QAAMC,SAAS,GAAG,MAAM;AACpBJ,IAAAA,OAAO,CAACC,GAAR,CAAYI,IAAI,CAACC,SAAL,CAAe9C,KAAK,CAACE,IAArB,CAAZ;AACH,GAFD;;AAGA,sBACI;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAE,sBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAyB,IAAA,KAAK,EAAE;AAACK,MAAAA,MAAM,EAAC;AAAR,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,SAAhB;AAA0B,IAAA,IAAI,EAAC,IAA/B;AAAoC,IAAA,OAAO,EAAE8B,MAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,SAAhB;AAA0B,IAAA,IAAI,EAAC,IAA/B;AAAoC,IAAA,OAAO,EAAEC,cAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,CAJJ,CADJ,CADJ,eAWI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAyB,IAAA,KAAK,EAAE;AAACxC,MAAAA,KAAK,EAAC;AAAP,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,WAAD;AACI,IAAA,KAAK,EAAEE,KADX;AAEI,IAAA,QAAQ,EAAEgB,QAFd;AAGI,IAAA,OAAO,EAAES,OAHb;AAII,IAAA,UAAU,EAAEC,UAJhB;AAKI,IAAA,KAAK,EAAE/B,KALX;AAMI,IAAA,IAAI,EAAED,KAAK,CAACiD,IANhB;AAOI,IAAA,OAAO,EAAEjD,KAAK,CAACqD,OAPnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAUI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,SAAhB;AAA0B,IAAA,IAAI,EAAC,IAA/B;AAAoC,IAAA,OAAO,EAAER,aAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAVJ,eAWI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,SAAhB;AAA0B,IAAA,IAAI,EAAC,IAA/B;AAAoC,IAAA,OAAO,EAAEG,SAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAXJ,eAYI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,SAAhB;AAA0B,IAAA,IAAI,EAAC,IAA/B;AAAoC,IAAA,OAAO,EAAEE,SAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAZJ,CAXJ,CADJ;AA4BH","sourcesContent":["import React, { component, useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Switch, Route, Link, withRouter } from 'react-router-dom';\nimport { Redirect} from 'react-router';\nimport { NameForm } from './helperUIcomponents.js';\nimport Button from 'react-bootstrap/Button';\nimport Table from 'react-bootstrap/Table';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport cellEditFactory from 'react-bootstrap-table2-editor';\nimport MaterialTable from 'material-table';\n\nexport function CustomTable(props) {\n\n    const round = String(props.round)\n      \n    return (\n        <div style={{padding:50, width:'100%'}}>\n            \n            <MaterialTable\n                title={\"Round: \".concat(round)}\n                columns={props.state.columns}\n                data={props.state.data}\n                options = {{\n                    search:false,\n                    paging:false,\n                    headerStyle: {backgroundColor: '#ddd', height: 10 },\n                    filtering: false,\n                    hideFilterIcons: true,\n                    sorting: false\n                }}\n                editable={{\n                onRowAdd: (newData) =>\n                    new Promise((resolve) => {\n                    setTimeout(() => {\n                        resolve(); \n                        props.setState((prevState) => {\n                        const data = [...prevState.data];\n                        data.push(newData);\n                        return { ...prevState, data };\n                        });\n                    }, 0);\n                    }),\n                onRowUpdate: (newData, oldData) =>\n                    new Promise((resolve) => {\n                    setTimeout(() => {\n                        resolve();\n                        if (oldData) {\n                        props.setState((prevState) => {\n                            const data = [...prevState.data];\n                            data[data.indexOf(oldData)] = newData;\n                            return { ...prevState, data };\n                        });\n                        }\n                    }, 0);\n                    }),\n                onRowDelete: (oldData) =>\n                    new Promise((resolve) => {\n                    setTimeout(() => {\n                        resolve();\n                        props.setState((prevState) => {\n                        const data = [...prevState.data];\n                        data.splice(data.indexOf(oldData), 1);\n                        return { ...prevState, data };\n                        });\n                    }, 0);\n                    }),\n                }}\n            />\n        </div>\n    );\n  }\n\n\nexport default function MakeRound(props) {\n\n    const [numRows, setNumRows] = useState(1);\n    const [round, setRound] = useState(1) //placeholder, this should be handed down from the quiz overview page\n    const [state, setState] = useState({ columns: [\n        //{ title: 'Quesition Number', field: 'tableData.id', type:'numeric', editable:false },\n        { title: 'Question', field: 'question' },\n        { title: 'Answer', field: 'answer' },\n      ],\n      data: [\n        {  qn: \"1\", question:'Input Question' , answer:'Input Answer' },\n      ],\n    });\n\n    const [homeRedirect, setHomeRedirect] = useState(false);\n    const [quizOverviewRedirect, setQuizOverviewRedirect] = useState(false);\n\n\n    /*----------Navigation Helpers Start----------*/\n    const toHome = () => {\n        setHomeRedirect(true);\n    }\n    const toQuizOverview = () => {\n        setQuizOverviewRedirect(true);\n    }\n\n    if (homeRedirect) {\n        return <Redirect push to=\"/\" />;\n    }\n    if (quizOverviewRedirect) {\n        return <Redirect push to=\"/quizOverview\" />;\n    }\n\n    const printProducts = () => {\n        console.log(state.data);\n    }\n    const printQuiz = () => {\n        console.log(props.quiz)\n    }\n    const printData = () => {\n        console.log(JSON.stringify(state.data))\n    }\n    return(\n        <div className=\"full-screen-container\">  \n            <div className =\"upper-left-container\">\n                <div className=\"central\" style={{height:400}}>\n                    <Button variant=\"primary\" size=\"lg\" onClick={toHome}>\n                        Home\n                    </Button>\n                    <div className=\"padded-container\">\n                        <Button variant=\"primary\" size='lg' onClick={toQuizOverview}>Overview</Button>\n                    </div>\n                </div>\n            </div>\n            <div className=\"central\" style={{width:'100%'}}>\n                <CustomTable \n                    state={state}\n                    setState={setState}  \n                    numRows={numRows}  \n                    setNumRows={setNumRows}\n                    round={round}\n                    quiz={props.quiz}\n                    setQuiz={props.setQuiz}\n                />\n                <Button variant=\"primary\" size='lg' onClick={printProducts}>Print Products</Button>\n                <Button variant=\"primary\" size='lg' onClick={printQuiz}>Print Quiz</Button>\n                <Button variant=\"primary\" size='lg' onClick={printData}>Print Quiz</Button>\n            </div>\n        </div>\n    );\n}\n\n"]},"metadata":{},"sourceType":"module"}