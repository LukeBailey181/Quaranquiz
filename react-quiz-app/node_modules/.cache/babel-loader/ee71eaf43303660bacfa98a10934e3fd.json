{"ast":null,"code":"var _jsxFileName = \"/Users/luke/Documents/Documents/projects/Quaranquiz/react-quiz-app/src/components/makeRound.js\";\nimport React, { component, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Redirect } from 'react-router';\nimport { NameForm } from './helperUIcomponents.js';\nimport Button from 'react-bootstrap/Button';\nimport Table from 'react-bootstrap/Table';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport cellEditFactory from 'react-bootstrap-table2-editor';\n\nfunction QuestionInput(props) {\n  const [questionNumber, setQuestionNumber] = useState(1);\n\n  const incrementQ = () => {\n    setQuestionNumber(questionNumber + 1);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }, \"Qestion \", questionNumber), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(NameForm, {\n    fieldText: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, \"Answer \", questionNumber), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(NameForm, {\n    fieldText: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: incrementQ,\n    type: \"button\",\n    class: \"btn btn-primary btn-lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, \"Add Question\"));\n}\n\nexport default function MakeRound(props) {\n  /*----------Navigation Helpers Start----------*/\n  const [homeRedirect, setHomeRedirect] = useState(false);\n  const [quizOverviewRedirect, setQuizOverviewRedirect] = useState(false);\n\n  const toHome = () => {\n    setHomeRedirect(true);\n  };\n\n  const toQuizOverview = () => {\n    setQuizOverviewRedirect(true);\n  };\n\n  if (homeRedirect) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      push: true,\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 16\n      }\n    });\n  }\n\n  if (quizOverviewRedirect) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      push: true,\n      to: \"/quizOverview\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 16\n      }\n    });\n  }\n  /*----------Navigation Helpers End----------*/\n\n\n  const columns = [{\n    dataField: 'id',\n    text: 'Question Number'\n  }, {\n    dataField: 'Question',\n    text: 'Question'\n  }, {\n    dataField: 'Answer',\n    text: 'Answer'\n  }];\n\n  if (props.edit) {//api call to round from DB to edit and \n    //set this equal to roundData\n  } else {\n    const [roundData, setRoundData] = useState([{\n      id: '1',\n      Question: 'Click to edit',\n      Answer: 'Click to edit'\n    }]);\n  }\n\n  const printProducts = () => {\n    console.log(roundData);\n  };\n\n  const newTableEntry = () => {\n    setRoundData([roundData, {\n      id: '1',\n      Question: 'Click to edit',\n      Answer: 'Click to edit'\n    }]);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"full-screen-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"upper-left-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"central\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: toHome,\n    type: \"button\",\n    class: \"btn btn-primary btn-lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 21\n    }\n  }, \"Home\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"padded-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    size: \"lg\",\n    onClick: toQuizOverview,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 25\n    }\n  }, \"Overview\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"central\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(BootstrapTable, {\n    keyField: \"id\",\n    data: roundData,\n    columns: columns,\n    cellEdit: cellEditFactory({\n      mode: 'click'\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    size: \"lg\",\n    onClick: printProducts,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }, \"Print Products\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"success\",\n    size: \"lg\",\n    onClick: newTableEntry,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }, \"Add Question\")));\n}","map":{"version":3,"sources":["/Users/luke/Documents/Documents/projects/Quaranquiz/react-quiz-app/src/components/makeRound.js"],"names":["React","component","useState","Link","Redirect","NameForm","Button","Table","BootstrapTable","cellEditFactory","QuestionInput","props","questionNumber","setQuestionNumber","incrementQ","MakeRound","homeRedirect","setHomeRedirect","quizOverviewRedirect","setQuizOverviewRedirect","toHome","toQuizOverview","columns","dataField","text","edit","roundData","setRoundData","id","Question","Answer","printProducts","console","log","newTableEntry","mode"],"mappings":"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","sourcesContent":["import React, { component, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Redirect} from 'react-router';\nimport { NameForm } from './helperUIcomponents.js';\nimport Button from 'react-bootstrap/Button';\nimport Table from 'react-bootstrap/Table';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport cellEditFactory from 'react-bootstrap-table2-editor';\n\n\nfunction QuestionInput(props) {\n\n    const [questionNumber, setQuestionNumber] = useState(1);\n\n    const incrementQ = () => {\n        setQuestionNumber(questionNumber + 1);\n    }\n\n    \n\n    return(\n        <div>                                                                                   \n            <h2>Qestion {questionNumber}</h2>\n            <div>\n                <NameForm fieldText = \"\"/>\n            </div>\n            <h2>Answer {questionNumber}</h2>\n            <div>\n                <NameForm fieldText = \"\"/>\n            </div>\n            <button onClick={incrementQ} type=\"button\" class=\"btn btn-primary btn-lg\">\n                Add Question\n            </button>\n        </div>\n    )\n}\n\nexport default function MakeRound(props) {\n\n    /*----------Navigation Helpers Start----------*/\n    const [homeRedirect, setHomeRedirect] = useState(false);\n    const [quizOverviewRedirect, setQuizOverviewRedirect] = useState(false);\n\n    const toHome = () => {\n        setHomeRedirect(true);\n    }\n    const toQuizOverview = () => {\n        setQuizOverviewRedirect(true);\n    }\n\n    if (homeRedirect) {\n        return <Redirect push to=\"/\" />;\n    }\n    if (quizOverviewRedirect) {\n        return <Redirect push to=\"/quizOverview\" />;\n    }\n    /*----------Navigation Helpers End----------*/\n\n    const columns = [{\n        dataField: 'id',\n        text: 'Question Number'\n      }, {\n        dataField: 'Question',\n        text: 'Question'\n      }, {\n        dataField: 'Answer',\n        text: 'Answer'\n      }];\n\n    \n\n    if (props.edit) {\n        //api call to round from DB to edit and \n        //set this equal to roundData\n    } else {\n       const [roundData, setRoundData] = useState([{id:'1', Question: 'Click to edit', Answer: 'Click to edit'}]);\n    }\n\n    const printProducts = () => {\n        console.log(roundData);\n    }\n\n    const newTableEntry = () => {\n        setRoundData([roundData, {id:'1', Question: 'Click to edit', Answer: 'Click to edit'}]);\n    }\n\n\n    return(\n        <div className=\"full-screen-container\">  \n            <div className =\"upper-left-container\">\n                <div className=\"central\">\n                    <button onClick={toHome} type=\"button\" class=\"btn btn-primary btn-lg\">\n                        Home\n                    </button>\n                    <div className=\"padded-container\">\n                        <Button variant=\"primary\" size='lg' onClick={toQuizOverview}>Overview</Button>\n                    </div>\n                </div>\n            </div>\n            <div className=\"central\">\n            <BootstrapTable\n                keyField=\"id\"\n                data={ roundData }\n                columns={ columns }\n                cellEdit={ cellEditFactory({ mode: 'click' }) }\n            />\n            <Button variant=\"primary\" size='lg' onClick={printProducts}>Print Products</Button>\n            <Button variant=\"success\" size='lg' onClick={newTableEntry}>Add Question</Button>\n            </div>\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}